#!/usr/bin/env python
# Example config: https://github.com/ros/dynamic_reconfigure/blob/melodic-devel/cfg/Test.cfg

PACKAGE = "yolact_ros"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# ROS node config

gen.add("image_topic", str_t, 1 << 0, "Image topic used for subscribing", "/camera/color/image_raw")
gen.add("use_compressed_image", bool_t, 1 << 0, "Subscribe to compressed image topic", False)
gen.add("publish_visualization", bool_t, 1 << 1, "Publish images with detections",  True)
gen.add("publish_detections", bool_t, 1 << 2, "Publish detections as message",  True)
gen.add("display_visualization", bool_t, 1 << 3, "Display window with detection image",  False)

# Yolact internal config

gen.add("display_masks", bool_t, 1 << 4, "Whether or not to display masks over bounding boxes",  True)
gen.add("display_bboxes", bool_t, 1 << 5, "Whether or not to display bboxes around masks",  True)
gen.add("display_text", bool_t, 1 << 6, "Whether or not to display text (class [score])",  True)
gen.add("display_scores", bool_t, 1 << 7, "Whether or not to display scores in addition to classes",  True)
gen.add("display_fps", bool_t, 1 << 8, "When displaying video, draw the FPS on the frame", False)
gen.add("score_threshold", double_t, 1 << 9, "Detections with a score under this threshold will not be considered",  0.0, 0.0, 1.0)
gen.add("crop_masks", bool_t, 1 << 10, "If true, crop output masks with the predicted bounding box",  True)
gen.add("top_k", int_t, 1 << 11, "Further restrict the number of predictions to parse", 5, 0, 100)

exit(gen.generate(PACKAGE, "yolact_ros", "Yolact"))
